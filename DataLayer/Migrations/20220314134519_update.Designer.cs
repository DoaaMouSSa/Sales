// <auto-generated />
using System;
using DataLayer.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(AccountDbContext))]
    [Migration("20220314134519_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataLayer.Tables.TblCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("cat_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tblCategory");
                });

            modelBuilder.Entity("DataLayer.Tables.TblProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("barcode")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("purchase_price")
                        .HasColumnType("real");

                    b.Property<float>("sale_price")
                        .HasColumnType("real");

                    b.Property<int>("sub_cat_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sub_cat_id");

                    b.ToTable("tblProduct");
                });

            modelBuilder.Entity("DataLayer.Tables.TblSubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("subcat_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cat_id");

                    b.ToTable("tblSubCategory");
                });

            modelBuilder.Entity("DataLayer.Tables.TblUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("DataLayer.Tables.TblProduct", b =>
                {
                    b.HasOne("DataLayer.Tables.TblSubCategory", "TblSubCategory")
                        .WithMany("TblProduct")
                        .HasForeignKey("sub_cat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblSubCategory");
                });

            modelBuilder.Entity("DataLayer.Tables.TblSubCategory", b =>
                {
                    b.HasOne("DataLayer.Tables.TblCategory", "TblCategory")
                        .WithMany("TblSubCategory")
                        .HasForeignKey("cat_id");

                    b.Navigation("TblCategory");
                });

            modelBuilder.Entity("DataLayer.Tables.TblCategory", b =>
                {
                    b.Navigation("TblSubCategory");
                });

            modelBuilder.Entity("DataLayer.Tables.TblSubCategory", b =>
                {
                    b.Navigation("TblProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
